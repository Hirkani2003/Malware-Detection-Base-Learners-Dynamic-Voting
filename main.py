import argparse
from url_input import predict_url, plot_prediction
from graphs_plot import plot_ml, plot_voting

# Create a parser object
parser = argparse.ArgumentParser(description="Perform URL Prediction using Base Learners")

# Add common command-line arguments
parser.add_argument("command", help="The command to execute (predict)")
parser.add_argument("-i", "--input_path", help="Input path")
parser.add_argument("-o", "--output_path", help="Output path")


# Parse the command-line arguments
args = parser.parse_args()

# Check the command and execute corresponding action
if args.command == "predict":
    url_link = args.input_path
    output_path = args.output_path
    output, prob = predict_url(url_link)
    print(f"URL : {url_link}")
    print(f"URL Prediction Output : {output}")
    print(f"URL Prediction Output Probabilities : {prob}")
    plot_prediction(url_link, prob*100, output, output_path)
elif args.command == 'plot':
    plot_type = args.input_path
    output_path = args.output_path
    if plot_type == 'ML':
        plot_ml(output_path)
    elif plot_type == 'Voting':
        plot_voting(output_path)
    else:
        print("Unknown input type(plot_type). Use 'ML' or 'Voting' type.")
else:
    print("Unknown command. Use 'predict' command.")
