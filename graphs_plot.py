import matplotlib.pyplot as plt

accuracies_ml = {
    'Random\nForest': 98.06,
    'Naive\nBayes': 73.57,
    'SVM': 83.25,
    'Logistic\nRegression': 75.12,
    'Decision\nTree': 96.88,
    'XGBoost': 97.27
}

accuracies_voting = {
    'Hard\nVoting': 94.37,
    'Soft\nVoting': 97.31,
    'Weighted\nVoting': 98.15
}


def plot_ml(output_path):
    plt.figure(figsize=(10, 10))
    x_ml = list(accuracies_ml.keys())
    y_ml = list(accuracies_ml.values())
    bars = plt.bar(x_ml, y_ml, color='skyblue', edgecolor='black')
    for bar, score in zip(bars, y_ml):
        plt.text(bar.get_x() + bar.get_width() / 2 - 0.25, bar.get_height() + 0.5, f'{score:.2f}', fontsize=12)
    plt.tick_params(axis='x', rotation=90)
    plt.xlabel("Machine Learning Models")
    plt.ylabel("Accuracies")
    plt.title("ML Models Accuracies Plot")
    plt.savefig(output_path)


def plot_voting(output_path):
    plt.figure(figsize=(10, 10))
    x_voting = list(accuracies_voting.keys())
    y_voting = list(accuracies_voting.values())
    bars = plt.bar(x_voting, y_voting, color='lightgreen', edgecolor='black')
    plt.plot(x_voting, y_voting, marker='.', color='tab:red', linestyle='-', markersize=8)
    for bar, score in zip(bars, y_voting):
        plt.text(bar.get_x() + bar.get_width() / 2 - 0.25, bar.get_height() + 0.5, f'{score:.2f}', fontsize=12)
    plt.tick_params(axis='x', rotation=90)
    plt.xlabel("Dynamic Voting Models")
    plt.ylabel("Accuracies")
    plt.title("Dynamic Voting Accuracies Plot")
    plt.savefig(output_path)

