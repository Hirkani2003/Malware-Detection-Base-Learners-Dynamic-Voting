from load_model import Model
from preprocessing import PreProcess
import numpy as np
import matplotlib.pyplot as plt
import warnings

warnings.filterwarnings("ignore")
model_file = "model_files/random_forest.pickle"
predict_dict = {
    0: "BENIGN",
    1: "DEFACEMENT",
    2: "MALWARE",
    3: "PHISHING",
}


def load_model_file(file):
    loaded_model = Model(file).model_load()
    return loaded_model


def process_url(url_link):
    preprocess = PreProcess(url_link)
    processed_input = preprocess.perform_processing()
    return processed_input


def get_output(output):
    return predict_dict[output]


def predict_url(url_link):
    model = load_model_file(model_file)
    processed_in = process_url(url_link)
    result = model.predict(np.array([processed_in]))
    probabilities = model.predict_proba(np.array([processed_in])).flatten()
    predicted_output = get_output(result[0])
    return predicted_output, probabilities


def plot_prediction(url, probabilities, output, output_path):
    plt.bar(list(predict_dict.values()), probabilities, color=['green', 'blue', 'red', 'yellow'],
            edgecolor='black')
    plt.xlabel("Malware Types")
    plt.ylabel("Output Probabilities")
    plt.title(f"URL : {url}\nPredicted Output : {output}", weight=1.5)
    plt.savefig(output_path)

